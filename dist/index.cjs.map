{"version":3,"file":"index.cjs","sources":["../src/config.ts","../src/main.ts"],"sourcesContent":["export const CONFIG = {\n    START_DATE: process.env.START_DATE || '2024-01-01',\n    END_DATE: process.env.END_DATE || '2024-10-10'\n  };","import axios from 'axios';\nimport dotenv from 'dotenv';\nimport { createWriteStream } from 'fs';\nimport { CONFIG } from './config';\nimport { format } from 'fast-csv';\n\ndotenv.config();\n\nconst figma_access_token = process.env.FIGMA_ACCESS_TOKEN;\nconst file_key = process.env.FILE_KEY;\nconst base_url = 'https://api.figma.com/v1/analytics/libraries/';\n\nconst { START_DATE, END_DATE } = CONFIG;\n\ninterface FigmaAnalyticsData {\n    week?: string;\n    component_key?: string;\n    component_name?: string;\n    team_name?: string;\n    workspace_name?: string;\n    file_name?: string;\n    detachments?: number;\n    insertions?: number;\n    num_instances?: number;\n    num_teams_using?: number;\n    num_files_using?: number;\n}\n\ninterface ReportConfig {\n    endpoint: string;\n    groupBy: string;\n    filename: string;\n    headers: { id: string; title: string }[];\n}\n\nasync function fetchAllPages(url: string, headers: Record<string, string>): Promise<FigmaAnalyticsData[]> {\n    let allData: FigmaAnalyticsData[] = [];\n    let nextPage = true;\n    let cursor = '';\n\n    while (nextPage) {\n        const response = await axios.get(url + (cursor ? `&cursor=${cursor}` : ''), { headers });\n        const json_data = response.data;\n        allData = allData.concat(json_data.rows || json_data.components || json_data.files);\n\n        if (json_data.next_page) {\n            cursor = json_data.cursor;\n            console.log(\"Requesting next page: \" + url + `&cursor=${cursor}`);\n        } else {\n            console.log(\"No new data. We're done\");\n            nextPage = false;\n        }\n    }\n\n    return allData;\n}\n\nasync function fetchReport(config: ReportConfig): Promise<FigmaAnalyticsData[]> {\n    const params = `/${config.endpoint}?group_by=${config.groupBy}&start_date=${START_DATE}&end_date=${END_DATE}&order=asc`;\n    const url = base_url + file_key + params;\n    const headers = { 'X-FIGMA-TOKEN': figma_access_token || '' };\n\n    return await fetchAllPages(url, headers);\n}\n\nasync function writeCSV(data: FigmaAnalyticsData[], filename: string, headers: { id: string; title: string }[]): Promise<void> {\n    const writeStream = createWriteStream(`output/${filename}.csv`);\n\n    const csvHeaders = headers.map(header => header.title);\n\n    format({ headers: csvHeaders })\n        .pipe(writeStream)\n        .on('finish', () => {\n            console.log(`${filename}.csv has been written successfully`);\n        })\n        .on('error', (err) => {\n            console.error(`Error writing ${filename}.csv:`, err);\n        });\n\n    data.forEach(record => {\n        writeStream.write(record);\n    });\n\n    writeStream.end();\n}\n\nexport async function libraryAnalytics(): Promise<void> {\n    console.log('Starting Figma library analytics...');\n\n    const reportConfigs: ReportConfig[] = [\n        {\n            endpoint: 'actions',\n            groupBy: 'component',\n            filename: 'actions_by_component',\n            headers: [\n                { id: 'week', title: 'Week' },\n                { id: 'component_key', title: 'Component Key' },\n                { id: 'component_name', title: 'Component Name' },\n                { id: 'detachments', title: 'Detachments' },\n                { id: 'insertions', title: 'Insertions' }\n            ]\n        },\n        {\n            endpoint: 'actions',\n            groupBy: 'team',\n            filename: 'actions_by_team',\n            headers: [\n                { id: 'week', title: 'Week' },\n                { id: 'team_name', title: 'Team Name' },\n                { id: 'workspace_name', title: 'Workspace Name' },\n                { id: 'detachments', title: 'Detachments' },\n                { id: 'insertions', title: 'Insertions' }\n            ]\n        },\n        {\n            endpoint: 'usages',\n            groupBy: 'component',\n            filename: 'usages_by_component',\n            headers: [\n                { id: 'component_key', title: 'Component Key' },\n                { id: 'component_name', title: 'Component Name' },\n                { id: 'num_instances', title: 'Number of Instances' },\n                { id: 'num_teams_using', title: 'Number of Teams Using' },\n                { id: 'num_files_using', title: 'Number of Files Using' }\n            ]\n        },\n        {\n            endpoint: 'usages',\n            groupBy: 'file',\n            filename: 'usages_by_file',\n            headers: [\n                { id: 'team_name', title: 'Team Name' },\n                { id: 'workspace_name', title: 'Workspace Name' },\n                { id: 'file_name', title: 'File Name' },\n                { id: 'num_instances', title: 'Number of Instances' }\n            ]\n        }\n    ];\n\n    try {\n        for (const config of reportConfigs) {\n            const data = await fetchReport(config);\n            await writeCSV(data, config.filename, config.headers);\n        }\n\n        console.log('All Figma library analytics reports generated successfully!');\n    } catch (error) {\n        console.error('Error generating Figma library analytics reports:', error);\n        throw error;\n    }\n}\n\nif (typeof require !== 'undefined' && require.main === module) {\n    libraryAnalytics().catch(console.error);\n}"],"names":["createWriteStream","format"],"mappings":"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"}